# -*- coding: utf-8 -*-
"""AI Code Generator .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mKMLSlfrSrz9RGBoSJ7gI-LiiHsxC3-A
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install python-dotenv

import openai
import gradio as gr
from dotenv import load_dotenv
import os

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

def generate_code(prompt, language):
    if not prompt.strip():
        return "Please enter a prompt."

    full_prompt = f"Write a {language} code snippet for: {prompt}"

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",  # or "gpt-4"
            messages=[
                {"role": "system", "content": "You are a helpful coding assistant."},
                {"role": "user", "content": full_prompt}
            ],
            temperature=0.4,
            max_tokens=500
        )
        code = response['choices'][0]['message']['content']
        return code
    except Exception as e:
        return f"Error: {str(e)}"

iface = gr.Interface(
    fn=generate_code,
    inputs=[
        gr.Textbox(lines=3, label="Enter your code prompt (e.g., 'check prime number')"),
        gr.Dropdown(choices=["Python", "JavaScript", "Java", "C++"], value="Python", label="Language")
    ],
    outputs=gr.Code(label="Generated Code"),
    title="ðŸ’» AI Code Generator",
    description="Generate code from plain language using OpenAI GPT",
    theme="default"
)

if __name__ == "__main__":
    iface.launch()